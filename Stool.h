#pragma once
//
//  bottle.h
//  OpenGL Bottle Object
//

#ifndef STOOL_H
#define H

#include <glad/glad.h>
#include <vector>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
#include "shader.h"

class Stool {
public:
    // Material properties
    glm::vec3 ambient;
    glm::vec3 diffuse;
    glm::vec3 specular;

    // Texture properties
    unsigned int diffuseMap;
    unsigned int specularMap;
    float shininess;

    // Constructor with default values
    Stool()
        : ambient(glm::vec3(0.2f)), diffuse(glm::vec3(0.5f)), specular(glm::vec3(1.0f)), shininess(32.0f),
        diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    Stool(glm::vec3 amb, glm::vec3 diff, glm::vec3 spec, float shiny)
        : ambient(amb), diffuse(diff), specular(spec), shininess(shiny), diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    Stool(unsigned int dMap, unsigned int sMap, float shiny)
        : diffuseMap(dMap), specularMap(sMap), shininess(shiny), ambient(glm::vec3(0.0f)), diffuse(glm::vec3(0.0f)), specular(glm::vec3(0.0f)) {
        setUpVertexData();
    }

    ~Stool() {
        glDeleteVertexArrays(1, &VAO);
        glDeleteBuffers(1, &VBO);
        glDeleteBuffers(1, &EBO);
    }

    void drawWithMaterial(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();
        shader.setVec3("material.ambient", ambient);
        shader.setVec3("material.diffuse", diffuse);
        shader.setVec3("material.specular", specular);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

    void drawWithTexture(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();

        shader.setInt("material.diffuse", 0);
        shader.setInt("material.specular", 1);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glActiveTexture(GL_TEXTURE0);
        glBindTexture(GL_TEXTURE_2D, diffuseMap);
        glActiveTexture(GL_TEXTURE1);
        glBindTexture(GL_TEXTURE_2D, specularMap);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

private:
    unsigned int VAO, VBO, EBO;
    std::vector<float> vertices;
    std::vector<unsigned int> indices;

    void setUpVertexData() {
        // Define the vertex data (positions, normals, texture coordinates)
        vertices = {
      -0.179470f, 0.355000f, 0.051127f, 1.0000f, 0.0000f, 0.0000f, -2.0129f, 13.9764f,  // Vertex 1
      -0.179470f, 0.145000f, 0.051127f, 0.0000f, -1.0000f, 0.0000f, -2.0129f, 5.7087f,  // Vertex 2
      -0.179470f, 0.355000f, 0.071127f, -1.0000f, 0.0000f, 0.0000f, -2.8003f, 13.9764f,  // Vertex 3
      -0.179470f, 0.145000f, 0.071127f, 0.0000f, 0.0000f, 1.0000f, -2.8003f, 5.7087f,  // Vertex 4
      -0.179470f, 0.125000f, 0.071127f, 0.0000f, 1.0000f, 0.0000f, -2.8003f, 4.9213f,  // Vertex 5
      -0.179470f, 0.145000f, 0.158751f, 0.0000f, 0.0000f, -1.0000f, -6.2500f, 5.7087f,  // Vertex 6
      -0.179470f, 0.125000f, 0.158751f, -0.8277f, 0.2942f, 0.4779f, -6.2500f, 4.9213f,  // Vertex 7
      -0.179470f, 0.355000f, 0.158751f, 0.8277f, 0.2942f, -0.4779f, -6.2500f, 13.9764f,  // Vertex 8
      -0.179470f, 0.355000f, 0.178751f, -0.8277f, 0.2942f, -0.4779f, -7.0374f, 13.9764f,  // Vertex 9
      -0.179470f, 0.145000f, 0.178751f, 0.0000f, -0.2942f, 0.9557f, -7.0374f, 5.7087f,  // Vertex 10
      -0.179470f, 0.000000f, 0.158751f, 0.8277f, -0.2942f, 0.4779f, -6.2500f, -0.0000f,  // Vertex 11
      -0.179470f, 0.125000f, 0.178751f, 0.0000f, 0.2942f, 0.9557f, -7.0374f, 4.9213f,  // Vertex 12
      -0.179470f, 0.000000f, 0.178751f, 0.8277f, 0.2942f, 0.4779f, -7.0374f, -0.0000f,  // Vertex 13
      -0.179470f, 0.125000f, 0.051127f, 0.0000f, -0.2942f, -0.9557f, -2.0129f, 4.9213f,  // Vertex 14
      -0.179470f, 0.000000f, 0.051127f, 0.8277f, -0.2942f, -0.4779f, -2.0129f, 0.0000f,  // Vertex 15
      -0.179470f, 0.000000f, 0.071127f, -0.8277f, -0.2942f, 0.4779f, -2.8003f, 0.0000f,  // Vertex 16
      -0.065970f, 0.125000f, 0.158751f, 0.0000f, 0.2942f, -0.9557f, -2.5972f, 6.2500f,  // Vertex 17
      -0.065970f, 0.125000f, 0.071127f, -0.8277f, -0.2942f, -0.4779f, -2.5972f, 2.8003f,  // Vertex 18
      -0.085970f, 0.125000f, 0.158751f, 1.0000f, 0.0000f, 0.0000f, -3.3846f, 6.2500f,  // Vertex 19
      -0.085970f, 0.125000f, 0.071127f, 0.0000f, -1.0000f, 0.0000f, -3.3846f, 2.8003f,  // Vertex 20
      -0.085970f, 0.125000f, 0.178751f, -1.0000f, 0.0000f, 0.0000f, -3.3846f, 7.0374f,  // Vertex 21
      -0.085970f, 0.125000f, 0.051127f, 0.0000f, 0.0000f, 1.0000f, -7.0657f, 7.0374f,  // Vertex 22
      -0.199470f, 0.125000f, 0.158751f, 0.0000f, 1.0000f, 0.0000f, -7.0657f, 6.2500f,  // Vertex 23
      -0.199470f, 0.125000f, 0.071127f, 0.0000f, 0.0000f, -1.0000f, -3.3846f, 2.0129f,  // Vertex 24
      -0.085970f, 0.145000f, 0.071127f, -0.8277f, 0.2942f, 0.4779f, -7.0657f, 2.8003f,  // Vertex 25
      -0.085970f, 0.145000f, 0.158751f, 0.8277f, 0.2942f, -0.4779f, -7.0657f, 2.0129f,  // Vertex 26
      -0.085970f, 0.000000f, 0.158751f, -0.8277f, 0.2942f, -0.4779f, -7.8531f, 6.2500f,  // Vertex 27
      -0.085970f, 0.000000f, 0.178751f, 0.0000f, -0.2942f, 0.9557f, -7.8531f, 2.8003f,  // Vertex 28
      -0.085970f, 0.145000f, 0.051127f, 0.8277f, -0.2942f, 0.4779f, 2.8003f, 4.9213f,  // Vertex 29
      -0.085970f, 0.355000f, 0.051127f, 0.0000f, 0.2942f, 0.9557f, 2.8003f, 5.7087f,  // Vertex 30
      -0.085970f, 0.355000f, 0.071127f, 0.8277f, 0.2942f, 0.4779f, 6.2500f, 4.9213f,  // Vertex 31
      -0.085970f, 0.000000f, 0.071127f, 0.0000f, -0.2942f, -0.9557f, 6.2500f, 5.7087f,  // Vertex 32
      -0.085970f, 0.000000f, 0.051127f, 0.8277f, -0.2942f, -0.4779f, 6.2500f, 0.0000f,  // Vertex 33
      -0.085970f, 0.355000f, 0.158751f, -0.8277f, -0.2942f, 0.4779f, 7.0374f, 0.0000f,  // Vertex 34
      -0.085970f, 0.145000f, 0.178751f, 0.0000f, 0.2942f, -0.9557f, 7.0374f, 4.9213f,  // Vertex 35
      -0.085970f, 0.355000f, 0.178751f, -0.8277f, -0.2942f, -0.4779f, 2.0129f, 5.7087f,  // Vertex 36
      -0.199470f, 0.000000f, 0.178751f, 1.0000f, 0.0000f, 0.0000f, 2.0129f, 13.9764f,  // Vertex 37
      -0.199470f, 0.000000f, 0.158751f, 0.0000f, -1.0000f, 0.0000f, 2.8003f, 13.9764f,  // Vertex 38
      -0.199470f, 0.145000f, 0.071127f, -1.0000f, 0.0000f, 0.0000f, 2.8003f, 0.0000f,  // Vertex 39
      -0.199470f, 0.355000f, 0.071127f, 0.0000f, 0.0000f, 1.0000f, 2.0129f, 4.9213f,  // Vertex 40
      -0.199470f, 0.000000f, 0.071127f, 0.0000f, 1.0000f, 0.0000f, 2.0129f, 0.0000f,  // Vertex 41
      -0.065970f, 0.000000f, 0.071127f, 0.0000f, 0.0000f, -1.0000f, 6.2500f, 13.9764f,  // Vertex 42
      -0.065970f, 0.145000f, 0.071127f, -0.8277f, 0.2942f, 0.4779f, 7.0374f, 5.7087f,  // Vertex 43
      -0.065970f, 0.355000f, 0.071127f, 0.8277f, 0.2942f, -0.4779f, 7.0374f, 13.9764f,  // Vertex 44
      -0.199470f, 0.145000f, 0.158751f, -0.8277f, 0.2942f, -0.4779f, -7.8531f, 7.0374f,  // Vertex 45
      -0.065970f, 0.145000f, 0.158751f, 0.0000f, -0.2942f, 0.9557f, -7.0657f, 5.7087f,  // Vertex 46
      0.000000f, 0.395000f, 0.114939f, 0.8277f, -0.2942f, 0.4779f, -7.8531f, 5.7087f,  // Vertex 47
      -0.066360f, 0.395000f, 0.229878f, 0.0000f, 0.2942f, 0.9557f, -7.0657f, 13.9764f,  // Vertex 48
      -0.066360f, 0.395000f, 0.000000f, 0.8277f, 0.2942f, 0.4779f, -7.8531f, 13.9764f,  // Vertex 49
      -0.199080f, 0.395000f, 0.000000f, 0.0000f, -0.2942f, -0.9557f, -3.3846f, 5.7087f,  // Vertex 50
      -0.199080f, 0.395000f, 0.229878f, 0.8277f, -0.2942f, -0.4779f, -7.0657f, 4.9213f,  // Vertex 51
      -0.265440f, 0.395000f, 0.114939f, -0.8277f, -0.2942f, 0.4779f, -3.3846f, 4.9213f,  // Vertex 52
      -0.065970f, 0.000000f, 0.178751f, 0.0000f, 0.2942f, -0.9557f, -7.0657f, -0.0000f,  // Vertex 53
      -0.065970f, 0.355000f, 0.178751f, -0.8277f, -0.2942f, -0.4779f, -7.8531f, -0.0000f,  // Vertex 54
      -0.199470f, 0.355000f, 0.178751f, 1.0000f, 0.0000f, 0.0000f, -7.8531f, 4.9213f,  // Vertex 55
      -0.065970f, 0.355000f, 0.158751f, 0.0000f, -1.0000f, 0.0000f, -2.5972f, 4.9213f,  // Vertex 56
      -0.199470f, 0.355000f, 0.158751f, -1.0000f, 0.0000f, 0.0000f, -3.3846f, 0.0000f,  // Vertex 57
      -0.065970f, 0.000000f, 0.158751f, 0.0000f, 0.0000f, 1.0000f, -2.5972f, 0.0000f,  // Vertex 58
      -0.199470f, 0.000000f, 0.051127f, 0.0000f, 1.0000f, 0.0000f, -3.3846f, 13.9764f,  // Vertex 59
      -0.199470f, 0.355000f, 0.051127f, 0.0000f, 0.0000f, -1.0000f, -2.5972f, 5.7087f,  // Vertex 60
      -0.065970f, 0.000000f, 0.051127f, -0.8277f, 0.2942f, 0.4779f, -2.5972f, 13.9764f,  // Vertex 61
      -0.065970f, 0.355000f, 0.051127f, 0.8277f, 0.2942f, -0.4779f, 3.3846f, 6.2500f,  // Vertex 62
      -0.073470f, 0.355000f, 0.012315f, -0.8277f, 0.2942f, -0.4779f, 3.3846f, 7.0374f,  // Vertex 63
      -0.043845f, 0.355000f, 0.063627f, 0.0000f, -0.2942f, 0.9557f, 7.0657f, 6.2500f,  // Vertex 64
      -0.132720f, 0.355000f, 0.012315f, 0.8277f, -0.2942f, 0.4779f, 7.0657f, 7.0374f,  // Vertex 65
      -0.132720f, 0.355000f, 0.217563f, 0.0000f, 0.2942f, 0.9557f, 7.8531f, 6.2500f,  // Vertex 66
      -0.191970f, 0.355000f, 0.217563f, 0.8277f, 0.2942f, 0.4779f, 7.0657f, 2.8003f,  // Vertex 67
      -0.221595f, 0.355000f, 0.166251f, 0.0000f, -0.2942f, -0.9557f, 7.8531f, 2.8003f,  // Vertex 68
      -0.191970f, 0.355000f, 0.012315f, 0.8277f, -0.2942f, -0.4779f, 3.3846f, 2.8003f,  // Vertex 69
      -0.221595f, 0.355000f, 0.063627f, -0.8277f, -0.2942f, 0.4779f, 2.5972f, 6.2500f,  // Vertex 70
      -0.251220f, 0.355000f, 0.114939f, 0.0000f, 0.2942f, -0.9557f, 2.5972f, 2.8003f,  // Vertex 71
      -0.073470f, 0.355000f, 0.217563f, -0.8277f, -0.2942f, -0.4779f, 7.0657f, 2.0129f,  // Vertex 72
      -0.043845f, 0.355000f, 0.166251f, 1.0000f, 0.0000f, 0.0000f, 3.3846f, 2.0129f,  // Vertex 73
      -0.014220f, 0.355000f, 0.114939f, 0.0000f, -1.0000f, 0.0000f, 0.0000f, 4.5252f,  // Vertex 74
      -0.251220f, 0.435000f, 0.114939f, -1.0000f, 0.0000f, 0.0000f, 2.6126f, 9.0503f,  // Vertex 75
      -0.191970f, 0.435000f, 0.217563f, 0.0000f, 0.0000f, 1.0000f, 2.6126f, 0.0000f,  // Vertex 76
      -0.073470f, 0.435000f, 0.012315f, 0.0000f, 1.0000f, 0.0000f, 7.8378f, 0.0000f,  // Vertex 77
      -0.014220f, 0.435000f, 0.114939f, 0.0000f, 0.0000f, -1.0000f, 7.8378f, 9.0503f,  // Vertex 78
      -0.191970f, 0.435000f, 0.012315f, -0.8277f, 0.2942f, 0.4779f, 10.4504f, 4.5252f,  // Vertex 79
      -0.073470f, 0.435000f, 0.217563f, 0.8277f, 0.2942f, -0.4779f, -2.5972f, 0.0000f,  // Vertex 80
        };

        indices = {
            1, 0, 2, 2, 3, 1,  // Face 1
            4, 3, 5, 5, 6, 4,  // Face 2
            5, 7, 8, 8, 9, 5,  // Face 3
            10, 6, 11, 11, 12, 10,  // Face 4
            14, 13, 4, 4, 15, 14,  // Face 5
            17, 16, 18, 18, 19, 17,  // Face 6
            18, 20, 11, 11, 6, 18,  // Face 7
            21, 19, 4, 4, 13, 21,  // Face 8
            4, 6, 22, 22, 23, 4,  // Face 9
            24, 19, 18, 18, 25, 24,  // Face 10
            18, 26, 27, 27, 20, 18,  // Face 11
            29, 28, 24, 24, 30, 29,  // Face 12
            31, 19, 21, 21, 32, 31,  // Face 13
            33, 25, 34, 34, 35, 33,  // Face 14
            10, 12, 36, 36, 37, 10,  // Face 15
            38, 3, 2, 2, 39, 38,  // Face 16
            24, 3, 4, 4, 19, 24,  // Face 17
            40, 15, 4, 4, 23, 40,  // Face 18
            17, 19, 31, 31, 41, 17,  // Face 19
            30, 24, 42, 42, 43, 30,  // Face 20
            34, 25, 5, 5, 9, 34,  // Face 21
            44, 5, 3, 3, 38, 44,  // Face 22
            24, 25, 45, 45, 42, 24,  // Face 23
            1, 3, 24, 24, 28, 1,  // Face 24
            47, 46, 48, 48, 49, 47,  // Face 25
            49, 50, 47, 49, 51, 50,  // Face 26
            27, 52, 53, 53, 20, 27,  // Face 27
            53, 34, 20, 34, 11, 20,  // Face 28
            53, 35, 34, 11, 34, 9,  // Face 29
            11, 9, 54, 11, 54, 36,  // Face 30
            36, 12, 11, 9, 8, 54,  // Face 31
            45, 25, 33, 33, 55, 45,  // Face 32
            5, 25, 18, 18, 6, 5,  // Face 33
            5, 44, 56, 56, 7, 5,  // Face 34
            57, 26, 18, 18, 16, 57,  // Face 35
            22, 6, 10, 10, 37, 22,  // Face 36
            57, 52, 27, 27, 26, 57,  // Face 37
            14, 15, 40, 40, 58, 14,  // Face 38
            59, 58, 40, 40, 23, 59,  // Face 39
            59, 23, 38, 38, 23, 22,  // Face 40
            22, 44, 38, 36, 44, 22,  // Face 41
            22, 37, 36, 36, 56, 44,  // Face 42
            36, 54, 56, 38, 39, 59,  // Face 43
            60, 41, 31, 31, 32, 60,  // Face 44
            45, 55, 53, 53, 16, 45,  // Face 45
            53, 57, 16, 53, 52, 57,  // Face 46
            45, 16, 17, 42, 45, 17,  // Face 47
            42, 17, 41, 43, 42, 41,  // Face 48
            43, 41, 60, 60, 61, 43,  // Face 49
            14, 58, 59, 59, 13, 14,  // Face 50
            59, 1, 13, 1, 21, 13,  // Face 51
            59, 0, 1, 21, 1, 28,  // Face 52
            21, 28, 61, 21, 61, 60,  // Face 53
            60, 32, 21, 28, 29, 61,  // Face 54
            61, 62, 63, 63, 53, 61,  // Face 55
            53, 55, 61, 55, 43, 61,  // Face 56
            61, 29, 62, 29, 64, 62,  // Face 57
            29, 65, 64, 65, 8, 64,  // Face 58
            65, 66, 8, 66, 54, 8,  // Face 59
            66, 67, 54, 67, 56, 54,  // Face 60
            67, 39, 56, 67, 59, 39,  // Face 61
            64, 8, 0, 0, 68, 64,  // Face 62
            0, 59, 68, 8, 7, 0,  // Face 63
            7, 2, 0, 2, 7, 56,  // Face 64
            56, 39, 2, 59, 69, 68,  // Face 65
            59, 67, 69, 67, 70, 69,  // Face 66
            65, 29, 30, 65, 30, 33,  // Face 67
            65, 33, 35, 33, 30, 43,  // Face 68
            43, 55, 33, 71, 35, 53,  // Face 69
            72, 71, 53, 72, 53, 63,  // Face 70
            63, 73, 72, 71, 65, 35,  // Face 71
            75, 74, 51, 51, 50, 75,  // Face 72
            46, 48, 76, 76, 77, 46,  // Face 73
            78, 49, 51, 51, 74, 78,  // Face 74
            65, 71, 47, 47, 66, 65,  // Face 75
            47, 50, 66, 72, 73, 46,  // Face 76
            46, 47, 72, 47, 71, 72,  // Face 77
            50, 47, 79, 79, 75, 50,  // Face 78
            46, 77, 79, 79, 47, 46,  // Face 79
            64, 68, 49, 49, 62, 64,  // Face 80
            49, 48, 62, 62, 48, 46,  // Face 81
            46, 63, 62, 46, 73, 63,  // Face 82
            51, 70, 67, 67, 50, 51,  // Face 83
            67, 66, 50, 48, 49, 78,  // Face 84
            78, 76, 48, 51, 49, 68,  // Face 85
            68, 69, 51, 69, 70, 51,  // Face 86
            79, 77, 76, 76, 78, 79,  // Face 87
            78, 75, 79, 78, 74, 75,  // Face 88
            1, 0, 2, 2, 3, 1,  // Face 89
            4, 3, 5, 5, 6, 4,  // Face 90
            5, 7, 8, 8, 9, 5,  // Face 91
            10, 6, 11, 11, 12, 10,  // Face 92
            14, 13, 4, 4, 15, 14,  // Face 93
            17, 16, 18, 18, 19, 17,  // Face 94
            18, 20, 11, 11, 6, 18,  // Face 95
            21, 19, 4, 4, 13, 21,  // Face 96
            4, 6, 22, 22, 23, 4,  // Face 97
            24, 19, 18, 18, 25, 24,  // Face 98
            18, 26, 27, 27, 20, 18,  // Face 99
            29, 28, 24, 24, 30, 29,  // Face 100
            31, 19, 21, 21, 32, 31,  // Face 101
            33, 25, 34, 34, 35, 33,  // Face 102
            10, 12, 36, 36, 37, 10,  // Face 103
            38, 3, 2, 2, 39, 38,  // Face 104
            24, 3, 4, 4, 19, 24,  // Face 105
            40, 15, 4, 4, 23, 40,  // Face 106
            17, 19, 31, 31, 41, 17,  // Face 107
            30, 24, 42, 42, 43, 30,  // Face 108
            34, 25, 5, 5, 9, 34,  // Face 109
            44, 5, 3, 3, 38, 44,  // Face 110
            24, 25, 45, 45, 42, 24,  // Face 111
            1, 3, 24, 24, 28, 1,  // Face 112
            47, 46, 48, 48, 49, 47,  // Face 113
            49, 50, 47, 49, 51, 50,  // Face 114
            27, 52, 53, 53, 20, 27,  // Face 115
            53, 34, 20, 34, 11, 20,  // Face 116
            53, 35, 34, 11, 34, 9,  // Face 117
            11, 9, 54, 11, 54, 36,  // Face 118
            36, 12, 11, 9, 8, 54,  // Face 119
            45, 25, 33, 33, 55, 45,  // Face 120
            5, 25, 18, 18, 6, 5,  // Face 121
            5, 44, 56, 56, 7, 5,  // Face 122
            57, 26, 18, 18, 16, 57,  // Face 123
            22, 6, 10, 10, 37, 22,  // Face 124
            57, 52, 27, 27, 26, 57,  // Face 125
            14, 15, 40, 40, 58, 14,  // Face 126
            59, 58, 40, 40, 23, 59,  // Face 127
            59, 23, 38, 38, 23, 22,  // Face 128
            22, 44, 38, 36, 44, 22,  // Face 129
            22, 37, 36, 36, 56, 44,  // Face 130
            36, 54, 56, 38, 39, 59,  // Face 131
            60, 41, 31, 31, 32, 60,  // Face 132
            45, 55, 53, 53, 16, 45,  // Face 133
            53, 57, 16, 53, 52, 57,  // Face 134
            45, 16, 17, 42, 45, 17,  // Face 135
            42, 17, 41, 43, 42, 41,  // Face 136
            43, 41, 60, 60, 61, 43,  // Face 137
            14, 58, 59, 59, 13, 14,  // Face 138
            59, 1, 13, 1, 21, 13,  // Face 139
            59, 0, 1, 21, 1, 28,  // Face 140
            21, 28, 61, 21, 61, 60,  // Face 141
            60, 32, 21, 28, 29, 61,  // Face 142
            61, 62, 63, 63, 53, 61,  // Face 143
            53, 55, 61, 55, 43, 61,  // Face 144
            61, 29, 62, 29, 64, 62,  // Face 145
            29, 65, 64, 65, 8, 64,  // Face 146
            65, 66, 8, 66, 54, 8,  // Face 147
            66, 67, 54, 67, 56, 54,  // Face 148
            67, 39, 56, 67, 59, 39,  // Face 149
            64, 8, 0, 0, 68, 64,  // Face 150
            0, 59, 68, 8, 7, 0,  // Face 151
            7, 2, 0, 2, 7, 56,  // Face 152
            56, 39, 2, 59, 69, 68,  // Face 153
            59, 67, 69, 67, 70, 69,  // Face 154
            65, 29, 30, 65, 30, 33,  // Face 155
            65, 33, 35, 33, 30, 43,  // Face 156
            43, 55, 33, 71, 35, 53,  // Face 157
            72, 71, 53, 72, 53, 63,  // Face 158
            63, 73, 72, 71, 65, 35,  // Face 159
            75, 74, 51, 51, 50, 75,  // Face 160
            46, 48, 76, 76, 77, 46,  // Face 161
            78, 49, 51, 51, 74, 78,  // Face 162
            65, 71, 47, 47, 66, 65,  // Face 163
            47, 50, 66, 72, 73, 46,  // Face 164
            46, 47, 72, 47, 71, 72,  // Face 165
            50, 47, 79, 79, 75, 50,  // Face 166
            46, 77, 79, 79, 47, 46,  // Face 167
            64, 68, 49, 49, 62, 64,  // Face 168
            49, 48, 62, 62, 48, 46,  // Face 169
            46, 63, 62, 46, 73, 63,  // Face 170
            51, 70, 67, 67, 50, 51,  // Face 171
            67, 66, 50, 48, 49, 78,  // Face 172
            78, 76, 48, 51, 49, 68,  // Face 173
            68, 69, 51, 69, 70, 51,  // Face 174
            79, 77, 76, 76, 78, 79,  // Face 175
            78, 75, 79, 78, 74, 75,  // Face 176
        };



        // Generate and bind VAO, VBO, EBO
        glGenVertexArrays(1, &VAO);
        glGenBuffers(1, &VBO);
        glGenBuffers(1, &EBO);

        glBindVertexArray(VAO);

        glBindBuffer(GL_ARRAY_BUFFER, VBO);
        glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(float), vertices.data(), GL_STATIC_DRAW);

        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);
        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), indices.data(), GL_STATIC_DRAW);

        // Position attribute
        glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
        glEnableVertexAttribArray(0);

        // Normal attribute
        glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(3 * sizeof(float)));
        glEnableVertexAttribArray(1);

        // Texture coordinate attribute
        glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(6 * sizeof(float)));
        glEnableVertexAttribArray(2);

        glBindVertexArray(0);
    }
};

#endif /* GLASS_H */
