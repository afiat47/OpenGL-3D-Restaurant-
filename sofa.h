#pragma once
#pragma once
//
//  bottle.h
//  OpenGL Bottle Object
//

#ifndef SOFA_H
#define SOFA_H

#include <glad/glad.h>
#include <vector>
#include <glm/glm.hpp>
#include <glm/gtc/matrix_transform.hpp>
#include <glm/gtc/type_ptr.hpp>
#include "shader.h"

class Sofa {
public:
    // Material properties
    glm::vec3 ambient;
    glm::vec3 diffuse;
    glm::vec3 specular;

    // Texture properties
    unsigned int diffuseMap;
    unsigned int specularMap;
    float shininess;

    // Constructor with default values
    Sofa()
        : ambient(glm::vec3(0.2f)), diffuse(glm::vec3(0.5f)), specular(glm::vec3(1.0f)), shininess(32.0f),
        diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    Sofa(glm::vec3 amb, glm::vec3 diff, glm::vec3 spec, float shiny)
        : ambient(amb), diffuse(diff), specular(spec), shininess(shiny), diffuseMap(0), specularMap(0) {
        setUpVertexData();
    }

    Sofa(unsigned int dMap, unsigned int sMap, float shiny)
        : diffuseMap(dMap), specularMap(sMap), shininess(shiny), ambient(glm::vec3(0.0f)), diffuse(glm::vec3(0.0f)), specular(glm::vec3(0.0f)) {
        setUpVertexData();
    }

    ~Sofa() {
        glDeleteVertexArrays(1, &VAO);
        glDeleteBuffers(1, &VBO);
        glDeleteBuffers(1, &EBO);
    }

    void drawWithMaterial(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();
        shader.setVec3("material.ambient", ambient);
        shader.setVec3("material.diffuse", diffuse);
        shader.setVec3("material.specular", specular);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

    void drawWithTexture(Shader& shader, glm::mat4 model = glm::mat4(1.0f)) {
        shader.use();

        shader.setInt("material.diffuse", 0);
        shader.setInt("material.specular", 1);
        shader.setFloat("material.shininess", shininess);
        shader.setMat4("model", model);

        glActiveTexture(GL_TEXTURE0);
        glBindTexture(GL_TEXTURE_2D, diffuseMap);
        glActiveTexture(GL_TEXTURE1);
        glBindTexture(GL_TEXTURE_2D, specularMap);

        glBindVertexArray(VAO);
        glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(indices.size()), GL_UNSIGNED_INT, 0);
    }

private:
    unsigned int VAO, VBO, EBO;
    std::vector<float> vertices;
    std::vector<unsigned int> indices;

    void setUpVertexData() {
        // Define the vertex data (positions, normals, texture coordinates)
        vertices = {
         -0.939829f, 0.050000f, 0.939829f, 0.0000f, -1.0000f, 0.0000f, -37.0011f, 37.0011f,  // Vertex 1
         -0.892339f, 0.050000f, 1.282339f, 0.0000f, 0.0000f, -1.0000f, -35.1314f, 50.4858f,  // Vertex 2
         -0.160171f, 0.050000f, 0.939829f, 1.0000f, 0.0000f, 0.0000f, -6.3060f, 37.0011f,  // Vertex 3
         -0.892339f, 0.050000f, 1.332339f, 0.9750f, 0.2223f, 0.0000f, -35.1314f, 52.4543f,  // Vertex 4
         -0.942339f, 0.050000f, 1.282339f, 0.0000f, 1.0000f, 0.0000f, -37.0999f, 50.4858f,  // Vertex 5
         -0.959828f, 0.050000f, 0.160171f, 0.0000f, 0.0000f, 1.0000f, -37.7885f, 6.3060f,  // Vertex 6
         -0.939829f, 0.050000f, 0.160171f, -1.0000f, 0.0000f, 0.0000f, -37.0011f, 6.3060f,  // Vertex 7
         -0.160171f, 0.050000f, 0.959828f, 0.0000f, 0.2223f, -0.9750f, -6.3060f, 37.7885f,  // Vertex 8
         -0.067490f, 0.050000f, 0.977318f, 0.0000f, -0.1485f, -0.9889f, -2.6571f, 38.4771f,  // Vertex 9
         -0.067490f, 0.050000f, 1.027319f, 0.9889f, -0.1485f, 0.0000f, -2.6571f, 40.4456f,  // Vertex 10
         -0.067490f, 0.050000f, 1.282339f, -0.9889f, -0.1485f, 0.0000f, -2.6571f, 50.4858f,  // Vertex 11
         -0.067490f, 0.050000f, 1.332339f, 0.0000f, -0.1485f, 0.9889f, -2.6571f, 52.4543f,  // Vertex 12
         -1.349828f, 0.050000f, 1.349828f, 0.9889f, -0.1485f, -0.0000f, -53.1429f, 53.1429f,  // Vertex 13
         -0.017490f, 0.050000f, 1.332339f, -0.9889f, -0.1485f, -0.0000f, -0.6886f, 52.4543f,  // Vertex 14
         0.000000f, 0.050000f, 1.349828f, -0.0000f, -0.1485f, -0.9889f, -0.0000f, 53.1429f,  // Vertex 15
         0.000000f, 0.050000f, 0.959828f, -0.0000f, -0.1485f, 0.9889f, -0.0000f, 37.7885f,  // Vertex 16
         -0.942339f, 0.050000f, 1.332339f, -0.0000f, -1.0000f, -0.0000f, -37.0999f, 52.4543f,  // Vertex 17
         -1.282339f, 0.050000f, 1.332339f, 0.0000f, -1.0000f, 0.0000f, -50.4858f, 52.4543f,  // Vertex 18
         -0.977318f, 0.050000f, 0.067490f, 0.0000f, 0.0000f, -1.0000f, -38.4771f, 2.6571f,  // Vertex 19
         -0.977318f, 0.050000f, 0.017490f, 1.0000f, 0.0000f, 0.0000f, -38.4771f, 0.6886f,  // Vertex 20
         -1.027319f, 0.050000f, 0.067490f, 0.9750f, 0.2223f, 0.0000f, -40.4456f, 2.6571f,  // Vertex 21
         -1.282339f, 0.050000f, 0.017490f, 0.0000f, 1.0000f, 0.0000f, -50.4858f, 0.6886f,  // Vertex 22
         -1.282339f, 0.050000f, 0.067490f, 0.0000f, 0.0000f, 1.0000f, -50.4858f, 2.6571f,  // Vertex 23
         -1.282339f, 0.050000f, 0.892339f, -1.0000f, 0.0000f, 0.0000f, -50.4858f, 35.1314f,  // Vertex 24
         -1.332339f, 0.050000f, 0.067490f, 0.0000f, 0.2223f, -0.9750f, -52.4543f, 2.6571f,  // Vertex 25
         -1.332339f, 0.050000f, 0.892339f, 0.0000f, -0.1485f, -0.9889f, -52.4543f, 35.1314f,  // Vertex 26
         -1.332339f, 0.050000f, 1.332339f, 0.9889f, -0.1485f, 0.0000f, -52.4543f, 52.4543f,  // Vertex 27
         -1.332339f, 0.050000f, 1.282339f, -0.9889f, -0.1485f, 0.0000f, -52.4543f, 50.4858f,  // Vertex 28
         -1.332339f, 0.050000f, 0.942339f, 0.0000f, -0.1485f, 0.9889f, -52.4543f, 37.0999f,  // Vertex 29
         -1.349828f, 0.050000f, 0.000000f, 0.9889f, -0.1485f, -0.0000f, -53.1429f, -0.0000f,  // Vertex 30
         -0.959828f, 0.050000f, 0.000000f, -0.9889f, -0.1485f, -0.0000f, -37.7885f, 0.0000f,  // Vertex 31
         -1.027318f, 0.050000f, 0.017490f, -0.0000f, -0.1485f, -0.9889f, -40.4456f, 0.6886f,  // Vertex 32
         -1.332339f, 0.050000f, 0.017490f, -0.0000f, -0.1485f, 0.9889f, -52.4543f, 0.6886f,  // Vertex 33
         -1.282339f, 0.050000f, 0.942339f, -0.0000f, -1.0000f, -0.0000f, -50.4858f, 37.0999f,  // Vertex 34
         -1.282339f, 0.050000f, 1.282339f, 0.0000f, -1.0000f, 0.0000f, -50.4858f, 50.4858f,  // Vertex 35
         -0.017490f, 0.050000f, 0.977318f, 0.0000f, 0.0000f, -1.0000f, -0.6886f, 38.4771f,  // Vertex 36
         -0.017490f, 0.050000f, 1.282339f, 1.0000f, 0.0000f, 0.0000f, -0.6886f, 50.4858f,  // Vertex 37
         -0.017490f, 0.050000f, 1.027319f, 0.9750f, 0.2223f, 0.0000f, -0.6886f, 40.4456f,  // Vertex 38
         -1.349828f, 0.330000f, 0.000000f, 0.0000f, 1.0000f, 0.0000f, 53.1429f, 1.9685f,  // Vertex 39
         -0.959828f, 0.330000f, 0.000000f, 0.0000f, 0.0000f, 1.0000f, 37.7885f, 1.9685f,  // Vertex 40
         -0.959828f, 0.330000f, 0.160171f, -1.0000f, 0.0000f, 0.0000f, 53.1429f, 12.9921f,  // Vertex 41
         -0.959828f, 0.230000f, 0.160171f, 0.0000f, 0.2223f, -0.9750f, 37.7885f, 12.9921f,  // Vertex 42
         -1.259657f, 0.400000f, 0.160171f, 0.0000f, -0.1485f, -0.9889f, -0.0000f, 12.9921f,  // Vertex 43
         -1.243694f, 0.330000f, 0.160171f, 0.9889f, -0.1485f, 0.0000f, -0.0000f, 1.9685f,  // Vertex 44
         -1.259657f, 0.400000f, 1.259657f, -0.9889f, -0.1485f, 0.0000f, -6.3060f, 12.9921f,  // Vertex 45
         -1.220890f, 0.230000f, 0.160171f, 0.0000f, -0.1485f, 0.9889f, -6.3060f, 1.9685f,  // Vertex 46
         -1.220890f, 0.230000f, 1.220890f, 0.9889f, -0.1485f, -0.0000f, -6.3060f, 9.0551f,  // Vertex 47
         -0.939829f, 0.230000f, 0.160171f, -0.9889f, -0.1485f, -0.0000f, -6.3060f, 26.3799f,  // Vertex 48
         -0.939829f, 0.230000f, 0.939829f, -0.0000f, -0.1485f, -0.9889f, -6.3060f, 23.5533f,  // Vertex 49
         -1.349828f, 0.330000f, 0.160171f, -0.0000f, -0.1485f, 0.9889f, -49.5928f, 26.3799f,  // Vertex 50
         -1.349828f, 0.400000f, 0.160171f, -0.0000f, -1.0000f, -0.0000f, -6.3060f, 19.5152f,  // Vertex 51
         -1.349828f, 0.400000f, 1.349828f, 0.0000f, -1.0000f, 0.0000f, -48.0665f, 19.5152f,  // Vertex 52
         0.000000f, 0.330000f, 1.349828f, 0.0000f, 0.0000f, -1.0000f, -37.0011f, 9.0551f,  // Vertex 53
         -0.160171f, 0.330000f, 1.349828f, 1.0000f, 0.0000f, 0.0000f, -37.0011f, 1.9685f,  // Vertex 54
         -0.160171f, 0.400000f, 1.349828f, 0.9750f, 0.2223f, 0.0000f, 37.0011f, 1.9685f,  // Vertex 55
         -0.160171f, 0.230000f, 0.939829f, 0.0000f, 1.0000f, 0.0000f, 37.7885f, 9.0551f,  // Vertex 56
         -0.160171f, 0.230000f, 0.959828f, 0.0000f, 0.0000f, 1.0000f, 37.0011f, 9.0551f,  // Vertex 57
         -0.160171f, 0.400000f, 1.259657f, -1.0000f, 0.0000f, 0.0000f, 48.9643f, 12.9921f,  // Vertex 58
         0.000000f, 0.330000f, 0.959828f, 0.0000f, 0.2223f, -0.9750f, 49.5928f, 15.7480f,  // Vertex 59
         -0.160171f, 0.330000f, 0.959828f, 0.0000f, -0.1485f, -0.9889f, 53.1429f, 15.7480f,  // Vertex 60
         -0.160171f, 0.230000f, 1.220890f, 0.9889f, -0.1485f, 0.0000f, 37.7885f, 0.0000f,  // Vertex 61
         -0.160171f, 0.330000f, 1.243694f, -0.9889f, -0.1485f, 0.0000f, 37.7885f, 6.3060f,  // Vertex 62
         -1.324829f, 0.000000f, 0.025000f, 0.0000f, -0.1485f, 0.9889f, 53.1429f, 0.0000f,  // Vertex 63
         -1.289848f, 0.000000f, 0.025000f, 0.9889f, -0.1485f, -0.0000f, 48.9643f, 6.3060f,  // Vertex 64
         -1.289848f, 0.000000f, 0.059980f, -0.9889f, -0.1485f, -0.0000f, 53.1429f, 6.3060f,  // Vertex 65
         -1.324829f, 0.000000f, 0.059980f, -0.0000f, -0.1485f, -0.9889f, -37.7885f, 9.0551f,  // Vertex 66
         -1.019809f, 0.000000f, 0.025000f, -0.0000f, -0.1485f, 0.9889f, -48.0665f, 9.0551f,  // Vertex 67
         -1.019809f, 0.000000f, 0.059980f, -0.0000f, -1.0000f, -0.0000f, -37.7885f, 12.9921f,  // Vertex 68
         -1.289849f, 0.000000f, 0.934829f, 0.0000f, -1.0000f, 0.0000f, -48.9643f, 12.9921f,  // Vertex 69
         -1.324829f, 0.000000f, 0.934829f, 0.0000f, 0.0000f, -1.0000f, 0.0000f, 1.9685f,  // Vertex 70
         -0.984828f, 0.000000f, 0.025000f, 1.0000f, 0.0000f, 0.0000f, 0.0000f, 12.9921f,  // Vertex 71
         -0.984828f, 0.000000f, 0.059980f, 0.9750f, 0.2223f, 0.0000f, 6.3060f, 12.9921f,  // Vertex 72
         -1.324829f, 0.000000f, 0.899849f, 0.0000f, 1.0000f, 0.0000f, 6.3060f, 15.7480f,  // Vertex 73
         -1.289849f, 0.000000f, 0.899849f, 0.0000f, 0.0000f, 1.0000f, 0.0000f, 1.9685f,  // Vertex 74
         -0.025000f, 0.000000f, 1.019809f, -1.0000f, 0.0000f, 0.0000f, -53.1429f, 1.9685f,  // Vertex 75
         -0.059980f, 0.000000f, 1.019809f, 0.0000f, 0.2223f, -0.9750f, 0.0000f, 12.9921f,  // Vertex 76
         -0.025000f, 0.000000f, 0.984828f, 0.0000f, -0.1485f, -0.9889f, -6.3060f, 12.9921f,  // Vertex 77
         -0.059980f, 0.000000f, 0.984828f, 0.9889f, -0.1485f, 0.0000f, -53.1429f, 15.7480f,  // Vertex 78
         -0.025000f, 0.000000f, 1.324829f, -0.9889f, -0.1485f, 0.0000f, -6.3060f, 15.7480f,  // Vertex 79
         -0.059980f, 0.000000f, 1.324829f, 0.0000f, -0.1485f, 0.9889f, 6.3060f, 1.9685f,  // Vertex 80
         -0.059980f, 0.000000f, 1.289849f, 0.9889f, -0.1485f, -0.0000f, 6.3060f, 9.0551f,  // Vertex 81
         -0.025000f, 0.000000f, 1.289849f, -0.9889f, -0.1485f, -0.0000f, -37.7885f, 1.9685f,  // Vertex 82
         -1.289849f, 0.000000f, 1.289849f, -0.0000f, -0.1485f, -0.9889f, 49.5928f, 6.3060f,  // Vertex 83
         -1.289849f, 0.000000f, 1.324829f, -0.0000f, -0.1485f, 0.9889f, 49.5928f, 49.5928f,  // Vertex 84
         -1.324829f, 0.000000f, 1.324829f, -0.0000f, -1.0000f, -0.0000f, 53.1429f, 53.1429f,  // Vertex 85
         -1.324829f, 0.000000f, 1.289849f, 0.0000f, -1.0000f, 0.0000f, 6.3060f, 53.1429f,  // Vertex 86
         -0.899849f, 0.000000f, 1.289849f, 0.0000f, 0.0000f, -1.0000f, 6.3060f, 49.5928f,  // Vertex 87
         -0.899849f, 0.000000f, 1.324829f, 1.0000f, 0.0000f, 0.0000f, -53.1429f, 12.9921f,  // Vertex 88
         -0.934829f, 0.000000f, 1.289849f, 0.9750f, 0.2223f, 0.0000f, 0.0000f, 1.9685f,  // Vertex 89
         -0.934829f, 0.000000f, 1.324829f, 0.0000f, 1.0000f, 0.0000f, 0.0000f, 12.9921f,  // Vertex 90
        };

        indices = {
            1, 0, 2, 2, 3, 1,  // Face 1
            1, 4, 0, 0, 4, 5,  // Face 2
            5, 6, 0, 3, 2, 7,  // Face 3
            3, 7, 8, 3, 8, 9,  // Face 4
            3, 9, 10, 3, 10, 11,  // Face 5
            12, 3, 11, 12, 11, 13,  // Face 6
            14, 12, 13, 13, 15, 14,  // Face 7
            12, 16, 3, 12, 4, 16,  // Face 8
            12, 17, 4, 17, 5, 4,  // Face 9
            17, 18, 5, 18, 19, 5,  // Face 10
            17, 20, 18, 17, 21, 20,  // Face 11
            17, 22, 21, 17, 23, 22,  // Face 12
            24, 22, 23, 23, 25, 24,  // Face 13
            12, 26, 17, 12, 27, 26,  // Face 14
            12, 28, 27, 12, 29, 28,  // Face 15
            20, 21, 29, 24, 25, 29,  // Face 16
            25, 28, 29, 19, 29, 30,  // Face 17
            30, 5, 19, 19, 31, 29,  // Face 18
            31, 20, 29, 21, 32, 29,  // Face 19
            32, 24, 29, 27, 28, 33,  // Face 20
            34, 33, 23, 34, 27, 33,  // Face 21
            23, 17, 34, 35, 7, 15,  // Face 22
            15, 13, 35, 13, 36, 35,  // Face 23
            36, 37, 35, 35, 8, 7,  // Face 24
            37, 36, 10, 10, 9, 37,  // Face 25
            30, 29, 38, 38, 39, 30,  // Face 26
            30, 39, 40, 40, 5, 30,  // Face 27
            40, 41, 5, 43, 42, 44,  // Face 28
            44, 45, 43, 44, 46, 45,  // Face 29
            6, 47, 48, 48, 0, 6,  // Face 30
            6, 5, 41, 41, 47, 6,  // Face 31
            42, 43, 49, 49, 50, 42,  // Face 32
            40, 39, 38, 38, 43, 40,  // Face 33
            38, 49, 43, 45, 41, 40,  // Face 34
            40, 43, 45, 38, 29, 12,  // Face 35
            12, 49, 38, 12, 50, 49,  // Face 36
            12, 51, 50, 12, 14, 52,  // Face 37
            52, 53, 12, 53, 51, 12,  // Face 38
            53, 54, 51, 2, 0, 48,  // Face 39
            48, 55, 2, 2, 55, 56,  // Face 40
            56, 7, 2, 44, 42, 50,  // Face 41
            44, 50, 51, 44, 51, 54,  // Face 42
            54, 57, 44, 15, 58, 52,  // Face 43
            52, 14, 15, 58, 15, 7,  // Face 44
            7, 56, 58, 56, 59, 58,  // Face 45
            48, 47, 41, 48, 41, 46,  // Face 46
            48, 46, 60, 48, 60, 56,  // Face 47
            56, 55, 48, 41, 45, 46,  // Face 48
            60, 46, 44, 44, 61, 60,  // Face 49
            44, 57, 61, 52, 58, 59,  // Face 50
            59, 53, 52, 59, 61, 53,  // Face 51
            59, 56, 60, 60, 61, 59,  // Face 52
            53, 61, 57, 57, 54, 53,  // Face 53
            63, 62, 32, 32, 21, 63,  // Face 54
            62, 63, 64, 64, 65, 62,  // Face 55
            63, 21, 22, 22, 64, 63,  // Face 56
            20, 31, 66, 66, 67, 20,  // Face 57
            24, 32, 62, 62, 65, 24,  // Face 58
            69, 68, 33, 33, 28, 69,  // Face 59
            66, 70, 71, 71, 67, 66,  // Face 60
            73, 72, 25, 25, 23, 73,  // Face 61
            65, 64, 22, 22, 24, 65,  // Face 62
            72, 73, 68, 68, 69, 72,  // Face 63
            70, 19, 18, 18, 71, 70,  // Face 64
            73, 23, 33, 33, 68, 73,  // Face 65
            67, 71, 18, 18, 20, 67,  // Face 66
            70, 66, 31, 31, 19, 70,  // Face 67
            28, 25, 72, 72, 69, 28,  // Face 68
            75, 74, 37, 37, 9, 75,  // Face 69
            76, 74, 75, 75, 77, 76,  // Face 70
            79, 78, 13, 13, 11, 79,  // Face 71
            9, 8, 77, 77, 75, 9,  // Face 72
            81, 80, 10, 10, 36, 81,  // Face 73
            81, 78, 79, 79, 80, 81,  // Face 74
            81, 36, 13, 13, 78, 81,  // Face 75
            11, 10, 80, 80, 79, 11,  // Face 76
            76, 35, 37, 37, 74, 76,  // Face 77
            76, 77, 8, 8, 35, 76,  // Face 78
            82, 34, 17, 17, 83, 82,  // Face 79
            84, 83, 17, 17, 26, 84,  // Face 80
            82, 85, 27, 27, 34, 82,  // Face 81
            26, 27, 85, 85, 84, 26,  // Face 82
            82, 83, 84, 84, 85, 82,  // Face 83
            1, 0, 2, 2, 3, 1,  // Face 84
            1, 4, 0, 0, 4, 5,  // Face 85
            5, 6, 0, 3, 2, 7,  // Face 86
            3, 7, 8, 3, 8, 9,  // Face 87
            3, 9, 10, 3, 10, 11,  // Face 88
            12, 3, 11, 12, 11, 13,  // Face 89
            14, 12, 13, 13, 15, 14,  // Face 90
            12, 16, 3, 12, 4, 16,  // Face 91
            12, 17, 4, 17, 5, 4,  // Face 92
            17, 18, 5, 18, 19, 5,  // Face 93
            17, 20, 18, 17, 21, 20,  // Face 94
            17, 22, 21, 17, 23, 22,  // Face 95
            24, 22, 23, 23, 25, 24,  // Face 96
            12, 26, 17, 12, 27, 26,  // Face 97
            12, 28, 27, 12, 29, 28,  // Face 98
            20, 21, 29, 24, 25, 29,  // Face 99
            25, 28, 29, 19, 29, 30,  // Face 100
            30, 5, 19, 19, 31, 29,  // Face 101
            31, 20, 29, 21, 32, 29,  // Face 102
            32, 24, 29, 27, 28, 33,  // Face 103
            34, 33, 23, 34, 27, 33,  // Face 104
            23, 17, 34, 35, 7, 15,  // Face 105
            15, 13, 35, 13, 36, 35,  // Face 106
            36, 37, 35, 35, 8, 7,  // Face 107
            37, 36, 10, 10, 9, 37,  // Face 108
            30, 29, 38, 38, 39, 30,  // Face 109
            30, 39, 40, 40, 5, 30,  // Face 110
            40, 41, 5, 43, 42, 44,  // Face 111
            44, 45, 43, 44, 46, 45,  // Face 112
            6, 47, 48, 48, 0, 6,  // Face 113
            6, 5, 41, 41, 47, 6,  // Face 114
            42, 43, 49, 49, 50, 42,  // Face 115
            40, 39, 38, 38, 43, 40,  // Face 116
            38, 49, 43, 45, 41, 40,  // Face 117
            40, 43, 45, 38, 29, 12,  // Face 118
            12, 49, 38, 12, 50, 49,  // Face 119
            12, 51, 50, 12, 14, 52,  // Face 120
            52, 53, 12, 53, 51, 12,  // Face 121
            53, 54, 51, 2, 0, 48,  // Face 122
            48, 55, 2, 2, 55, 56,  // Face 123
            56, 7, 2, 44, 42, 50,  // Face 124
            44, 50, 51, 44, 51, 54,  // Face 125
            54, 57, 44, 15, 58, 52,  // Face 126
            52, 14, 15, 58, 15, 7,  // Face 127
            7, 56, 58, 56, 59, 58,  // Face 128
            48, 47, 41, 48, 41, 46,  // Face 129
            48, 46, 60, 48, 60, 56,  // Face 130
            56, 55, 48, 41, 45, 46,  // Face 131
            60, 46, 44, 44, 61, 60,  // Face 132
            44, 57, 61, 52, 58, 59,  // Face 133
            59, 53, 52, 59, 61, 53,  // Face 134
            59, 56, 60, 60, 61, 59,  // Face 135
            53, 61, 57, 57, 54, 53,  // Face 136
            63, 62, 32, 32, 21, 63,  // Face 137
            62, 63, 64, 64, 65, 62,  // Face 138
            63, 21, 22, 22, 64, 63,  // Face 139
            20, 31, 66, 66, 67, 20,  // Face 140
            24, 32, 62, 62, 65, 24,  // Face 141
            69, 68, 33, 33, 28, 69,  // Face 142
            66, 70, 71, 71, 67, 66,  // Face 143
            73, 72, 25, 25, 23, 73,  // Face 144
            65, 64, 22, 22, 24, 65,  // Face 145
            72, 73, 68, 68, 69, 72,  // Face 146
            70, 19, 18, 18, 71, 70,  // Face 147
            73, 23, 33, 33, 68, 73,  // Face 148
            67, 71, 18, 18, 20, 67,  // Face 149
            70, 66, 31, 31, 19, 70,  // Face 150
            28, 25, 72, 72, 69, 28,  // Face 151
            75, 74, 37, 37, 9, 75,  // Face 152
            76, 74, 75, 75, 77, 76,  // Face 153
            79, 78, 13, 13, 11, 79,  // Face 154
            9, 8, 77, 77, 75, 9,  // Face 155
            81, 80, 10, 10, 36, 81,  // Face 156
            81, 78, 79, 79, 80, 81,  // Face 157
            81, 36, 13, 13, 78, 81,  // Face 158
            11, 10, 80, 80, 79, 11,  // Face 159
            76, 35, 37, 37, 74, 76,  // Face 160
            76, 77, 8, 8, 35, 76,  // Face 161
            82, 34, 17, 17, 83, 82,  // Face 162
            84, 83, 17, 17, 26, 84,  // Face 163
            82, 85, 27, 27, 34, 82,  // Face 164
            26, 27, 85, 85, 84, 26,  // Face 165
            82, 83, 84, 84, 85, 82,  // Face 166
            86, 1, 3, 3, 87, 86,  // Face 167
            16, 4, 88, 88, 89, 16,  // Face 168
            4, 1, 86, 86, 88, 4,  // Face 169
            3, 16, 89, 89, 87, 3,  // Face 170
            89, 88, 86, 86, 87, 89,  // Face 171
        };







        // Generate and bind VAO, VBO, EBO
        glGenVertexArrays(1, &VAO);
        glGenBuffers(1, &VBO);
        glGenBuffers(1, &EBO);

        glBindVertexArray(VAO);

        glBindBuffer(GL_ARRAY_BUFFER, VBO);
        glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(float), vertices.data(), GL_STATIC_DRAW);

        glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);
        glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), indices.data(), GL_STATIC_DRAW);

        // Position attribute
        glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)0);
        glEnableVertexAttribArray(0);

        // Normal attribute
        glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(3 * sizeof(float)));
        glEnableVertexAttribArray(1);

        // Texture coordinate attribute
        glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, 8 * sizeof(float), (void*)(6 * sizeof(float)));
        glEnableVertexAttribArray(2);

        glBindVertexArray(0);
    }
};

#endif /* GLASS_H */
